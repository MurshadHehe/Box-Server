import:
	org.bukkit.Bukkit
	org.bukkit.scoreboard.DisplaySlot

on load:
	loop all players:
		createScoreboard(loop-player)

on unload:
	loop all players:
		destroyScoreboard(loop-player)

on join:
	createScoreboard(player)

on quit:
	destroyScoreboard(player)

function updateTimers():
	set {server::scoreboard::nextclear} to {server::mapclear::frequency}
	remove difference between now and {server::mapclear::lastclear} from {server::scoreboard::nextclear}
	set {server::scoreboard::nextclear} to prettifyTimespan({server::scoreboard::nextclear})
	
	set {server::scoreboard::nextkoth} to {server::koth::frequency}
	remove difference between now and {server::koth::lastkoth} from {server::scoreboard::nextkoth}
	set {server::scoreboard::nextkoth} to prettifyTimespan({server::scoreboard::nextkoth})
	
every 100 ticks:
	updateTimers()
	loop all players:
		updateScoreboard(loop-player)

function updateScoreboard(p: player):
	if "%region at {_p}%" contains "afk":
		stop

	if {server::scoreboard::boards::%{_p}%} is not set:
		stop

	set {_kdr} to "Infinity"
	if {server::stats::%{_p}%::deaths} is not 0:
		set {_kdr} to {server::stats::%{_p}%::kills} / {server::stats::%{_p}%::deaths}

	set {_time} to {server::scoreboard::nextclear}
	set {_koth} to {server::scoreboard::nextkoth}
	
	if {server::koth::remaining} is not set:
		set {_line1} to "&b&lStats"
		set {_line2} to " &b• &7Kills: &b%{server::stats::%{_p}%::kills}%"
		set {_line3} to " &b• &7Deaths: &b%{server::stats::%{_p}%::deaths}%"
		set {_line4} to " &b• &7KDR: &b%{_kdr}%"
		set {_line5} to " &b• &7Best Killstreak: &b%{server::stats::%{_p}%::beststreak}%"
		set {_line6} to ""
		set {_line7} to "&b&lServer"
		set {_line8} to " &b• &7Next Koth: &b%{_koth}%"
		set {_line9} to " &b• &7TPS: &b%tps from last minute%"
		set {_line10} to " &b• &7Online Players: &b%size of all players%&7/&b%max players% "
		set {_line11} to " &b• &7Next Map Clear: &b%{_time}%"
		
	else:
		set {_capper} to {server::koth::capper}
		if {server::koth::capper} is not set:
			set {_capper} to "No One"
	
		set {_line1} to "&b&lStats"
		set {_line2} to " &b• &7Kills: &b%{server::stats::%{_p}%::kills}%"
		set {_line3} to " &b• &7Deaths: &b%{server::stats::%{_p}%::deaths}%"
		set {_line4} to ""
		set {_line5} to "&b&lKoth"
		set {_line6} to " &b• &7Remaining: &b%prettifyTimespan({server::koth::remaining})%"
		set {_line7} to " &b• &7Capper: &b%{_capper}%"
		set {_line8} to ""
		set {_line9} to "&b&lServer"
		set {_line10} to " &b• &7TPS: &b%tps from last minute%"
		set {_line11} to " &b• &7Online Players: &b%size of all players%&7/&b%max players%"
	
	
	set {_i} to 1
	loop 14 times:
		if {_line%{_i}%} is set:
			if {server::scoreboard::boards::%{_p}%::line::%{_i}%}.getPrefix() is not {_line%{_i}%}:
				{server::scoreboard::boards::%{_p}%::line::%{_i}%}.setPrefix({_line%{_i}%})
		add 1 to {_i}
	
function createScoreboard(p: player):
	set {_manager} to Bukkit.getScoreboardManager()
	set {server::scoreboard::boards::%{_p}%} to {_manager}.getNewScoreboard()
	set {_objective} to {server::scoreboard::boards::%{_p}%}.registerNewObjective("MainScoreboard", "lolipop", " &3&l• &b&lBoxServer &3&l• ")
	
	set {_i} to 0
	
	loop 14 times:
	
		set {_c} to "%{_i}%"
		set {_c::*} to {_c} split at ""
		remove all "" from {_c::*}
		set {_c} to ""
		loop {_c::*}:	
			set {_c} to "%{_c}%&%loop-value-2%"
			
			
		set {server::scoreboard::boards::%{_p}%::line::%{_i}%} to {server::scoreboard::boards::%{_p}%}.registerNewTeam("%{_i}%")
		{server::scoreboard::boards::%{_p}%::line::%{_i}%}.addEntry(formatted "%{_c}%")
		{_objective}.getScore(formatted "%{_c}%").setScore(13 - {_i})
		
		add 1 to {_i}
	
	{_objective}.setDisplaySlot(DisplaySlot.SIDEBAR)
	{_p}.setScoreboard({server::scoreboard::boards::%{_p}%})
		
	{server::scoreboard::boards::%{_p}%::line::13}.setPrefix("&7&oBoxServer.minehut.gg")
	
	updateScoreboard({_p})

function destroyScoreboard(p: player):
	delete {server::scoreboard::boards::%{_p}%::*}
	delete {server::scoreboard::boards::%{_p}%}
	{_p}.getScoreboard().clearSlot(DisplaySlot.SIDEBAR)